# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MaterialsBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, materials_id: int=None, name: str=None):  # noqa: E501
        """MaterialsBody - a model defined in Swagger

        :param materials_id: The materials_id of this MaterialsBody.  # noqa: E501
        :type materials_id: int
        :param name: The name of this MaterialsBody.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'materials_id': int,
            'name': str
        }

        self.attribute_map = {
            'materials_id': 'materials_ID',
            'name': 'name'
        }
        self._materials_id = materials_id
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'MaterialsBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The materials_body of this MaterialsBody.  # noqa: E501
        :rtype: MaterialsBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def materials_id(self) -> int:
        """Gets the materials_id of this MaterialsBody.


        :return: The materials_id of this MaterialsBody.
        :rtype: int
        """
        return self._materials_id

    @materials_id.setter
    def materials_id(self, materials_id: int):
        """Sets the materials_id of this MaterialsBody.


        :param materials_id: The materials_id of this MaterialsBody.
        :type materials_id: int
        """

        self._materials_id = materials_id

    @property
    def name(self) -> str:
        """Gets the name of this MaterialsBody.


        :return: The name of this MaterialsBody.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this MaterialsBody.


        :param name: The name of this MaterialsBody.
        :type name: str
        """

        self._name = name
